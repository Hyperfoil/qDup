name: example                                # the name of the test we plan to run
scripts:                                     # scripts are the series of commands to run a test
  sync-time:                                 # the unique script name
  - sh: ntpdate -u time.google.com           # runs ntpdate in the remote shell
  widflyScript:                              # the name of a new script
  - sh: cd ${{WF_HOME}}                      # cd to the WF_HOME state variable
  - sh: rm ./standalone/log/*                # remove the old logs
  - queue-download: ./standalone/log         # save the files after the script stops
  - sh: ./bin/standalone.sh &                # starts wildfly as a background process
  - sleep: 1s                                # wait a second for the new log files
  - sh: cd ./standalone/log                  # change to the log directory
  - sh:                                      # inline maps help for commands with multiple arguments
      silent : true                          # omit output from the run log
      command: tail -f server.log            # tail server.log       
    watch:                                   # watch streams each line of output to the sub commands
    - regex: ".*?FATAL.*"                    # if the line contains FATAL
      then:
      - ctrlC                                # send ctrl+c to the shell (ends tail -f)
      - abort: WF error                      # abort the run with a message WF error
    - regex: ".*? started in (?<startTime>\\d+)ms.*"
      then:
      - log: startTime=${{startTime}}        # named regex groups are added as state variables
      - ctrlC:
      - signal: WF_STARTED                   # notify other scripts that wildfly started
  - wait-for: DONE                           # pause this script until DONE is signalled
    timer: 
      30m:                                   # wait 30m then run sub-commands if still waiting for DONE
      - abort: run took longer than 30 minutes
hosts:                            # qDup needs a list of all the hosts involved in the test
  local : me@localhost:22         # use local as an alias for me on my laptop
  server :                        # use server as an alias for labserver4
    username : root               # the username
    hostname : labserver4         # the dns hostname
    port: 2222                    # the ssh port on the server
roles:                            # roles are how scripts are applied to hosts
  wildfly:                        # unique name for the role
    hosts:                        # a list of hosts in this role
    - server
    setup-scripts:                # scripts run sequentially before the run stage
    run-scripts:                  # scripts run in parallel during the run stage
      - wildflyScript             # wildflyScript will run on each host
      - wildflyScript:            # run a second copy of widflyScript
          with:                   # with allows an override for state variables
           WF_HOME : /dev/wf-x    # WF_HOME will be different for this instance of wildflyScript
    cleanup-scripts:              # scripts run sequentially after the run stage
  ALL:                            # the ALL role automacically includes all hosts from other roles
    setup-scripts: [sync-time]    # run sync-time on all hosts during the setup stage
    run-scripts:
      ${{hostMonitoring}}         # a script name defined in a state variable
                                  # leaving hostMonitoring undefined means a script is not run
states:
  WF_HOME: /runtime/wf-11         # sets WF_HOME state variable visible to all scripts
  server:                         # variables only visible to scripts running on server
    UNUSED : value
